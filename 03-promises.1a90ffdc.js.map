{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,sBA2B3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACPH,EACFF,EAAS,C,SAACH,E,MAAUC,IAEpBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAlCTR,EAAKgB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOjB,EAAWkB,OAC1BC,EAAOF,OAAOhB,EAAUiB,OACxBE,EAASH,OAAOf,EAAYgB,OAC5BG,EAAW,EAGjB,IAAK,IAAIC,EAAI,EAAGA,GAAIF,EAAQE,GAAI,EAC9BD,EAAWC,EACXnB,EAAckB,EAAUL,GACvBO,MAAK,EAACnB,SAACA,EAAQC,MAAEA,MAChBmB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAqBtB,QAAeC,MAAU,IAEvEsB,OAAM,EAACvB,SAACA,EAAQC,MAAEA,MACjBmB,EAAA7B,GAAS8B,OAAOG,QAAQ,oBAAoBxB,QAAeC,MAAU,IAEvEW,GAASG,EAEXtB,EAAKgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'; \n \nconst form = document.querySelector('.form'); \nconst delayInput = document.querySelector('input[name=delay]'); \nconst stepInput = document.querySelector('input[name=step]'); \nconst amountInput = document.querySelector('input[name=amount]'); \n \nform.addEventListener('submit', onSubmit); \n \nfunction onSubmit(e) { \n  e.preventDefault(); \n \n  let delay = Number(delayInput.value); \n  let step = Number(stepInput.value); \n  let amount = Number(amountInput.value); \n  let position = 0; \n \n \nfor (let i = 1; i<= amount; i+= 1) { \n  position = i; \n  createPromise(position, delay) \n  .then(({position, delay}) => { \n    Notiflix.Notify.success(`Fulfilled promise ${position} is ${delay}ms`); \n  }) \n  .catch(({position, delay}) => { \n    Notiflix.Notify.failure(`Rejected promise ${position} is ${delay}ms`); \n  }); \n  delay += step; \n} \nform.reset(); \n} \n \nfunction createPromise(position, delay) { \n  return new Promise((resolve, reject) => { \n  const shouldResolve = Math.random() > 0.3; \n  setTimeout(() => { \n  if (shouldResolve) { \n    resolve ({position, delay}); \n  } else { \n    reject({position, delay}) \n  } \n}, delay); \n  }); \n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","position1","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.1a90ffdc.js.map"}