{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,sBA2B3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EACFF,EAAS,CAACH,WAAUC,UAEpBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAlCHR,EAAKgB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAQJ,IANE,IAAIC,EAAQC,OAAOjB,EAAWkB,OAC1BC,EAAOF,OAAOhB,EAAUiB,OACxBE,EAASH,OAAOf,EAAYgB,OAIzBG,EAAI,EAAGA,GAAID,EAAQC,GAAI,EAE9BlB,EADWkB,EACaL,GACvBM,MAAK,SAAAC,G,IAAEnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAChBmB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEnEuB,OAAM,SAAAL,G,IAAEnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOI,QAAQ,oBAAmCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEnEW,GAASG,EAEXtB,EAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'; \n \nconst form = document.querySelector('.form'); \nconst delayInput = document.querySelector('input[name=delay]'); \nconst stepInput = document.querySelector('input[name=step]'); \nconst amountInput = document.querySelector('input[name=amount]'); \n \nform.addEventListener('submit', onSubmit); \n \nfunction onSubmit(e) { \n  e.preventDefault(); \n \n  let delay = Number(delayInput.value); \n  let step = Number(stepInput.value); \n  let amount = Number(amountInput.value); \n  let position = 0; \n \n \nfor (let i = 1; i<= amount; i+= 1) { \n  position = i; \n  createPromise(position, delay) \n  .then(({position, delay}) => { \n    Notiflix.Notify.success(`Fulfilled promise ${position} is ${delay}ms`); \n  }) \n  .catch(({position, delay}) => { \n    Notiflix.Notify.failure(`Rejected promise ${position} is ${delay}ms`); \n  }); \n  delay += step; \n} \nform.reset(); \n} \n \nfunction createPromise(position, delay) { \n  return new Promise((resolve, reject) => { \n  const shouldResolve = Math.random() > 0.3; \n  setTimeout(() => { \n  if (shouldResolve) { \n    resolve ({position, delay}); \n  } else { \n    reject({position, delay}) \n  } \n}, delay); \n  }); \n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.131be30f.js.map"}